
function Main.main 1
push constant 8000
push constant 1
push constant 1234
call Main.fillMemory 3
pop temp 0
push constant 8001
push constant 16
push constant 1
neg  
call Main.fillMemory 3
pop temp 0
push constant 8000
call Memory.peek 1
pop local 0
push local 0
call Main.convert 1
pop temp 0
push constant 0
return  

function Main.convert 3
push constant 0
not  
pop local 2
label WHILE_EXP.1 
push local 2
not  
if-goto WHILE_END.1 
push local 1
push constant 1
add  
pop local 1
push local 0
call Main.nextMask 1
pop local 0
push local 1
push constant 16
gt  
not  
not  
if-goto IF_FALSE.2 
push argument 0
push local 0
and  
push constant 0
eq  
not  
not  
if-goto IF_FALSE.3 
push constant 8000
push local 1
add  
push constant 1
call Memory.poke 2
pop temp 0
goto IF_END.3 
label IF_FALSE.3 
push constant 8000
push local 1
add  
push constant 0
call Memory.poke 2
pop temp 0
label IF_END.3 
goto IF_END.2 
label IF_FALSE.2 
push constant 0
pop local 2
label IF_END.2 
goto WHILE_EXP.1 
label WHILE_END.1 
push constant 0
return  

function Main.nextMask 0
push argument 0
push constant 0
eq  
not  
if-goto IF_FALSE.4 
push constant 1
return  
goto IF_END.4 
label IF_FALSE.4 
push argument 0
push constant 2
call Math.multiply 2
return  
label IF_END.4 

function Main.fillMemory 0
label WHILE_EXP.5 
push argument 1
push constant 0
gt  
not  
if-goto WHILE_END.5 
push argument 0
push argument 2
call Memory.poke 2
pop temp 0
push argument 1
push constant 1
sub  
pop argument 1
push argument 0
push constant 1
add  
pop argument 0
goto WHILE_EXP.5 
label WHILE_END.5 
push constant 0
return  
