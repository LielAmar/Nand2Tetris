// bootstrap code
@256
D=A
@SP
M=D
// call Sys.init 0
@Sys.init$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Sys.init$ret.1)
// function Main.T3 0
(Main.T3)
// call Main.t1 0
@Main.t1$ret.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.t1
0;JMP
(Main.t1$ret.2)
// call Main.t2 0
@Main.t2$ret.3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.t2
0;JMP
(Main.t2$ret.3)
// call Main.t3 0
@Main.t3$ret.4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.t3
0;JMP
(Main.t3$ret.4)
// call Main.t4 0
@Main.t4$ret.5
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.t4
0;JMP
(Main.t4$ret.5)
// label WHILE
(Main.T3$WHILE)
// goto WHILE
@Main.T3$WHILE
0;JMP
// return
@LCL
D=M
@15
M=D
@5
A=D-A
D=M
@14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R15
D=M
@1
A=D-A
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Main.t1 0
(Main.t1)
// C_PUSH constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// neg
@SP
A=M-1
M=-M
// C_PUSH constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
M=M-D
@SP
M=M-1
// C_PUSH constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
A=M-1
D=M
@CHECK_SECOND_ITEM_POSITIVE3
D;JLT
@SP
A=M-1
A=A-1
D=M
@TRUE3
D;JLT
@CODE_START3
0;JMP
(CHECK_SECOND_ITEM_POSITIVE3)
@SP
A=M-1
A=A-1
D=M
@FALSE3
D;JGE
(CODE_START3)
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
D=D-M
@TRUE3
D;JGT
(FALSE3)
@SP
A=M-1
A=A-1
M=0
@END3
0;JMP
(TRUE3)
@SP
A=M-1
A=A-1
M=-1
(END3)
@SP
M=M-1
// return
@LCL
D=M
@15
M=D
@5
A=D-A
D=M
@14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R15
D=M
@1
A=D-A
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Main.t2 0
(Main.t2)
// C_PUSH constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// neg
@SP
A=M-1
M=-M
// C_PUSH constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
M=M-D
@SP
M=M-1
// gt
@SP
A=M-1
D=M
@CHECK_SECOND_ITEM_POSITIVE6
D;JLT
@SP
A=M-1
A=A-1
D=M
@FALSE6
D;JLT
@CODE_START6
0;JMP
(CHECK_SECOND_ITEM_POSITIVE6)
@SP
A=M-1
A=A-1
D=M
@TRUE6
D;JGE
(CODE_START6)
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
D=D-M
@TRUE6
D;JLT
(FALSE6)
@SP
A=M-1
A=A-1
M=0
@END6
0;JMP
(TRUE6)
@SP
A=M-1
A=A-1
M=-1
(END6)
@SP
M=M-1
// return
@LCL
D=M
@15
M=D
@5
A=D-A
D=M
@14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R15
D=M
@1
A=D-A
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Main.t3 0
(Main.t3)
// C_PUSH constant 20000
@20000
D=A
@SP
A=M
M=D
@SP
M=M+1
// neg
@SP
A=M-1
M=-M
// C_PUSH constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
M=M-D
@SP
M=M-1
// C_PUSH constant 30000
@30000
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
A=M-1
D=M
@CHECK_SECOND_ITEM_POSITIVE9
D;JLT
@SP
A=M-1
A=A-1
D=M
@FALSE9
D;JLT
@CODE_START9
0;JMP
(CHECK_SECOND_ITEM_POSITIVE9)
@SP
A=M-1
A=A-1
D=M
@TRUE9
D;JGE
(CODE_START9)
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
D=D-M
@TRUE9
D;JLT
(FALSE9)
@SP
A=M-1
A=A-1
M=0
@END9
0;JMP
(TRUE9)
@SP
A=M-1
A=A-1
M=-1
(END9)
@SP
M=M-1
// return
@LCL
D=M
@15
M=D
@5
A=D-A
D=M
@14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R15
D=M
@1
A=D-A
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Main.t4 0
(Main.t4)
// C_PUSH constant 20000
@20000
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH constant 30000
@30000
D=A
@SP
A=M
M=D
@SP
M=M+1
// neg
@SP
A=M-1
M=-M
// C_PUSH constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
M=M-D
@SP
M=M-1
// gt
@SP
A=M-1
D=M
@CHECK_SECOND_ITEM_POSITIVE12
D;JLT
@SP
A=M-1
A=A-1
D=M
@FALSE12
D;JLT
@CODE_START12
0;JMP
(CHECK_SECOND_ITEM_POSITIVE12)
@SP
A=M-1
A=A-1
D=M
@TRUE12
D;JGE
(CODE_START12)
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
D=D-M
@TRUE12
D;JLT
(FALSE12)
@SP
A=M-1
A=A-1
M=0
@END12
0;JMP
(TRUE12)
@SP
A=M-1
A=A-1
M=-1
(END12)
@SP
M=M-1
// return
@LCL
D=M
@15
M=D
@5
A=D-A
D=M
@14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R15
D=M
@1
A=D-A
D=M
@THAT
M=D
@R15
D=M
@2
A=D-A
D=M
@THIS
M=D
@R15
D=M
@3
A=D-A
D=M
@ARG
M=D
@R15
D=M
@4
A=D-A
D=M
@LCL
M=D
@14
A=M
0;JMP
// function Sys.init 0
(Sys.init)
// call Main.T3 0
@Main.T3$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.T3
0;JMP
(Main.T3$ret.1)
// label WHILE
(Sys.init$WHILE)
// goto WHILE
@Sys.init$WHILE
0;JMP
