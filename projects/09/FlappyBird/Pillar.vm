function Pillar.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 1
pop this 0
push constant 40
pop this 1
push constant 511
pop this 2
push argument 0
pop this 3
push pointer 0
call Pillar.render 1
pop temp 0
push pointer 0
return
function Pillar.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Pillar.render 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 2
push constant 0
call Math.max 2
push constant 0
push constant 0
push this 2
push this 1
add
call Math.max 2
push constant 511
call Math.min 2
push constant 0
push this 3
add
call Screen.drawRectangle 4
pop temp 0
push this 2
push constant 5
sub
push constant 0
call Math.max 2
push this 3
push constant 5
sub
push constant 0
push this 2
push this 1
add
push constant 5
add
call Math.max 2
push constant 511
call Math.min 2
push this 3
call Screen.drawRectangle 4
pop temp 0
push this 2
push constant 0
call Math.max 2
push constant 255
push this 3
sub
push constant 0
push this 2
push this 1
add
call Math.max 2
push constant 511
call Math.min 2
push constant 255
call Screen.drawRectangle 4
pop temp 0
push this 2
push constant 5
sub
push constant 0
call Math.max 2
push constant 255
push this 3
sub
push constant 5
sub
push constant 0
push this 2
push this 1
add
push constant 5
add
call Math.max 2
push constant 511
call Math.min 2
push constant 255
push this 3
sub
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Pillar.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 2
push constant 0
call Math.max 2
push constant 0
push constant 0
push this 2
push this 1
add
call Math.max 2
push constant 511
call Math.min 2
push constant 0
push this 3
add
call Screen.drawRectangle 4
pop temp 0
push this 2
push constant 5
sub
push constant 0
call Math.max 2
push this 3
push constant 5
sub
push constant 0
push this 2
push this 1
add
push constant 5
add
call Math.max 2
push constant 511
call Math.min 2
push this 3
call Screen.drawRectangle 4
pop temp 0
push this 2
push constant 0
call Math.max 2
push constant 255
push this 3
sub
push constant 0
push this 2
push this 1
add
call Math.max 2
push constant 511
call Math.min 2
push constant 255
call Screen.drawRectangle 4
pop temp 0
push this 2
push constant 5
sub
push constant 0
call Math.max 2
push constant 255
push this 3
sub
push constant 5
sub
push constant 0
push this 2
push this 1
add
push constant 5
add
call Math.max 2
push constant 511
call Math.min 2
push constant 255
push this 3
sub
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Pillar.tick 0
push argument 0
pop pointer 0
push pointer 0
call Pillar.erase 1
pop temp 0
push this 2
push this 0
add
pop this 2
push pointer 0
call Pillar.render 1
pop temp 0
push constant 0
return
function Pillar.isOut 0
push argument 0
pop pointer 0
push this 2
push this 1
add
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Pillar.getX 0
push argument 0
pop pointer 0
push this 2
return
function Pillar.getWidth 0
push argument 0
pop pointer 0
push this 1
return
function Pillar.hasColided 7
push argument 0
pop pointer 0
push this 2
push constant 5
sub
pop local 0
push this 2
push this 1
add
push constant 5
add
pop local 1
push argument 1
pop local 3
push argument 1
push argument 3
add
pop local 4
push argument 2
pop local 5
push argument 2
push argument 4
add
pop local 6
push local 3
push local 0
gt
push local 3
push local 1
lt
and
push local 4
push local 0
gt
push local 4
push local 1
lt
and
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 5
push constant 1
neg
gt
push local 5
push this 3
lt
and
push local 6
push constant 1
neg
gt
push local 6
push this 3
lt
and
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
push constant 256
push this 3
sub
pop local 2
push local 5
push local 2
gt
push local 5
push constant 512
lt
and
push local 6
push local 2
gt
push local 6
push constant 512
lt
and
or
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
return
label IF_FALSE2
label IF_FALSE0
push constant 0
return
