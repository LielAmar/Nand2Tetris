// CommandType.C_PUSH constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// CommandType.C_PUSH constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
D=M-D
@TRUE1
D;JEQ
(FALSE1)
@SP
A=M-1
A=A-1
M=0
@END1
0;JMP
(TRUE1)
@SP
A=M-1
A=A-1
M=-1
(END1)
@SP
M=M-1
// CommandType.C_PUSH constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// CommandType.C_PUSH constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
A=M-1
D=M
@CHECK_SECOND_ITEM_POSITIVE2
D;JLT
@SP
A=M-1
A=A-1
D=M
@TRUE2
D;JLT
@CODE_START2
0;JMP
(CHECK_SECOND_ITEM_POSITIVE2)
@SP
A=M-1
A=A-1
D=M
@FALSE2
D;JGE
(CODE_START2)
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
D=D-M
@TRUE2
D;JGT
(FALSE2)
@SP
A=M-1
A=A-1
M=0
@END2
0;JMP
(TRUE2)
@SP
A=M-1
A=A-1
M=-1
(END2)
@SP
M=M-1
// CommandType.C_PUSH constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// CommandType.C_PUSH constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
A=M-1
D=M
@CHECK_SECOND_ITEM_POSITIVE3
D;JLT
@SP
A=M-1
A=A-1
D=M
@FALSE3
D;JLT
@CODE_START3
0;JMP
(CHECK_SECOND_ITEM_POSITIVE3)
@SP
A=M-1
A=A-1
D=M
@TRUE3
D;JGE
(CODE_START3)
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
D=D-M
@TRUE3
D;JLT
(FALSE3)
@SP
A=M-1
A=A-1
M=0
@END3
0;JMP
(TRUE3)
@SP
A=M-1
A=A-1
M=-1
(END3)
@SP
M=M-1
// CommandType.C_PUSH constant 56
@56
D=A
@SP
A=M
M=D
@SP
M=M+1
// CommandType.C_PUSH constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
// CommandType.C_PUSH constant 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
M=M+D
@SP
M=M-1
// CommandType.C_PUSH constant 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
M=M-D
@SP
M=M-1
// neg
@SP
A=M-1
M=-M
// and
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
M=D&M
@SP
M=M-1
// CommandType.C_PUSH constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
// or
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
M=D|M
@SP
M=M-1
